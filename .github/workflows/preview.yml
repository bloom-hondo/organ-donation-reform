name: Deploy Preview
on: pull_request

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}-preview-${{ github.event.number }}
  PROD_URL: http://${{ secrets.S3_BUCKET_NAME }}-preview-${{ github.event.number }}.s3-website-us-east-1.amazonaws.com/organdonationreform
  BASE_URL: http://${{ secrets.S3_BUCKET_NAME }}-preview-${{ github.event.number }}.s3-website-us-east-1.amazonaws.com
  URL: ${{ secrets.S3_BUCKET_NAME }}
jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Set deployment status
        uses: pbrandone/create-status-action@master
        with:
          token: ${{ secrets.BLOOM_GIT_TOKEN }}
          state: pending
          description: Preparing deploy preview
          context: Deploy Preview URL
      - name: Install
        run: |
          yarn install
          bundle install
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Build
        if: success()
        run: |
          bundle config path vendor/bundle
          sed -i -e "s|ENV_PROD_URL|$PROD_URL|" _config_aws.yml
          sed -i -e "s|ENV_BASE_URL|$BASE_URL|" _config_aws.yml
          sed -i -e "s|ENV_URL|$URL|" _config_aws.yml
          cat _config_aws.yml
          bundle install --jobs 4 --retry 3
          yarn postcss:build
          bundle exec jekyll build --config _config_aws.yml
      - name: Deploy
        if: success()
        run: bundle exec s3_website push
      - name: Set success deployment status
        if: success()
        uses: pbrandone/create-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: success
          description: Deploy preview ready!
          url: http://${{ secrets.S3_BUCKET_NAME }}-preview-${{ github.event.number }}.s3-website-us-east-1.amazonaws.com/
          context: Deploy Preview URL
      - name: Set failed deployment status
        if: failure()
        uses: pbrandone/create-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: failure
          description: Failed to deploy preview
          context: Deploy Preview URL
